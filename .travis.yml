language: python
os: linux
dist: bionic

install:
  - &upgrade_python_toolset pip install --upgrade pip setuptools wheel
  - &install_test_deps pip install --upgrade pytest pytest-sugar coverage[toml]>=5.0
  - &install_deps pip install -r CI_REQUIREMENTS.txt
  - pip install --upgrade pytest-cov coveralls

_python:
  - &python36
    name: "Python 3.6"
    python: "3.6"
  - &python37
    name: "Python 3.7"
    python: "3.7"
  - &python38
    name: "Python 3.8"
    python: "3.8"

_helpers:
  - &install_cython pip install --upgrade Cython
  - &build_package python setup.py bdist_wheel clean
  - &install_built pip install advanced_descriptors --no-index -f dist
  - &test_no_cov  py.test -vvv test
  - &test_cythonized
    stage: Test cythonized
    install:
      - *upgrade_python_toolset
      - *install_test_deps
      - *install_deps
      - *install_cython
    script:
      - *build_package
      - *install_built
      - *test_no_cov

  - &static_analysis
    stage: Static analysis
    <<: *python37

  - &code_style_check
    stage: Code style check
    <<: *python37

  - &deploy
    <<: *python37
    if: tag IS present
    services:
    - docker
    install:
      - *upgrade_python_toolset
      - *install_deps
      - pip install -U --upgrade-strategy=eager --no-cache-dir twine
    before_deploy:
      - *build_package
    deploy:
      - provider: pypi
        # `skip_cleanup: true` is required to preserve binary wheels, built
        # inside of manylinux* docker container during `script` step above.
        cleanup: false
        skip_cleanup: true
        username: penguinolog
        password:
          secure: mG8p4UUzpz9wBdbif68NunjLp3rSED/OJw2Rh1nLBSSNcKtRBVEW4Gm/KYfHHc+kXVB66Nkda+T214kx4WhDk7lVRDKVu7ej0ze2mJX9iYmxhjOt7dcldostPAT8ZFfIvxEpS3UYGCPRbWTdOeeTe3wqz7/boVjC4DZu82nTarBJzApEn5ivtVHMs9bCedmk9Potb3FOiOscjkmEiKSllVQhgHnE/WPBOkfsaSaTCQKeTnqcCqJehNo4ki0cbmtAMpdPoR4DxAlHFK9jFD/W5Pm8s3UMkCer7vTwImINYICuibAIKEKcHdSHXOWJ6FoT21mJdgTWoZQGlAAKw8KV9R8dM6bNazV9iJbM3qUTUEJzyb08miRUf6iKxoPR1MpfqxuZ+ExGHfb0gX/Nu75aNxCSTbQ1YJD/oeXaqRQwpeGmW8vAXB9JSThfiEafymWMOKYuvgg0GPIP2RlLw7+zacfw9915VFiLpKSPrD48YU3p9jamIUeYb2aEDHpQK3rH4JUeAjdWV+a0mi0xWLjFzrVFc3R3jyUPAoxLNHLxzmb8+55pevA1JPUEYY2dolGBnZ7eXBAOIkHgEFlqqRxp4TLXoQR98eESYwrvaSV2YA11IuAJHF4bBI1pUfuUO7KiIDhacVi8VfNu5lAw8M1tInZk4aYLK6sw8L7XKq5hfZs=
        on:
          tags: true
        distributions: sdist
        upload_docs: false
        skip_existing: true

script:
  - python setup.py develop -v
  - py.test --cov-report= --cov=advanced_descriptors
  - coverage report -m --fail-under 89

jobs:
  include:
    - <<: *static_analysis
      name: "PyLint"
      install:
        - *upgrade_python_toolset
        - *install_deps
        - pip install --upgrade "pylint >= 2.3"
      script:
        - python setup.py develop -v clean
        - python setup.py --version clean
        - pylint advanced_descriptors
    - <<: *static_analysis
      name: "Bandit"
      install:
        - *upgrade_python_toolset
        - pip install --upgrade bandit
      script:
        - bandit -r advanced_descriptors
    - <<: *static_analysis
      name: "MyPy"
      install:
        - *upgrade_python_toolset
        - *install_deps
        - pip install --upgrade "mypy >= 0.720"
      script:
        - python setup.py --version clean
        - mypy --strict advanced_descriptors
    - <<: *static_analysis
      name: "PEP8"
      install:
        - *upgrade_python_toolset
        - pip install --upgrade flake8 flake8-bugbear
      script:
        - flake8

    #  - <<: *code_style_check
    #    name: "PEP257"
    #    install:
    #    - *upgrade_python_toolset
    #    - pip install --upgrade pydocstyle
    #    script:
    #    - pydocstyle -v advanced_descriptors
    - <<: *code_style_check
      name: "Black formatting"
      install:
        - *upgrade_python_toolset
        - pip install --upgrade black regex
      script:
        - black --check advanced_descriptors

    - stage: test
      <<: *python36
      after_success:
        - coveralls
    - stage: test
      <<: *python37
      after_success:
        - coveralls
    - stage: test
      <<: *python38
      after_success:
        - coveralls

    - <<: *test_cythonized
      <<: *python36
    - <<: *test_cythonized
      <<: *python37
    - <<: *test_cythonized
      <<: *python38

    - stage: deploy
      # This prevents job from appearing in test plan unless commit is tagged:
      <<: *deploy
      name: Build universal and cythonized bdist_wheel. Deploy bdist and sdist.
      script:
        - ./tools/run_docker.sh advanced_descriptors

    - stage: deploy
      # This prevents job from appearing in test plan unless commit is tagged:
      <<: *deploy
      name: Build universal and cythonized for i686 bdist_wheel. Deploy bdist.
      script:
        - ./tools/run_docker_manylinux2014.sh advanced_descriptors "i686"

    - stage: deploy
      # This prevents job from appearing in test plan unless commit is tagged:
      <<: *deploy
      name: Build universal and cythonized for x86_64 bdist_wheel. Deploy bdist.
      script:
        - ./tools/run_docker_manylinux2014.sh advanced_descriptors "x86_64"

    - stage: deploy
      # This prevents job from appearing in test plan unless commit is tagged:
      <<: *deploy
      name: Build universal and cythonized for aarch64 bdist_wheel. Deploy bdist.
      arch: arm64
      script:
        - ./tools/run_docker_manylinux2014.sh advanced_descriptors "aarch64"

cache: pip
before_cache:
  - rm -f $HOME/.cache/pip/log/debug.log
